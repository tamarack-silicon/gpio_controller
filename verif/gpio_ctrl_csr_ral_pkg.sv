
// This file was autogenerated by PeakRDL-uvm
package gpio_ctrl_csr_ral_pkg;
    `include "uvm_macros.svh"
    import uvm_pkg::*;
    
    // Reg - gpio_ctrl_csr::OUTPUT_CTRL_VALUE
    class gpio_ctrl_csr__OUTPUT_CTRL_VALUE extends uvm_reg;
        rand uvm_reg_field OVALUE;

        function new(string name = "gpio_ctrl_csr__OUTPUT_CTRL_VALUE");
            super.new(name, 32, UVM_NO_COVERAGE);
        endfunction : new

        virtual function void build();
            this.OVALUE = new("OVALUE");
            this.OVALUE.configure(this, 32, 0, "RW", 0, 'h0, 1, 1, 0);
        endfunction : build
    endclass : gpio_ctrl_csr__OUTPUT_CTRL_VALUE

    // Reg - gpio_ctrl_csr::OUTPUT_CTRL_ENABLE
    class gpio_ctrl_csr__OUTPUT_CTRL_ENABLE extends uvm_reg;
        rand uvm_reg_field OENABLE;

        function new(string name = "gpio_ctrl_csr__OUTPUT_CTRL_ENABLE");
            super.new(name, 32, UVM_NO_COVERAGE);
        endfunction : new

        virtual function void build();
            this.OENABLE = new("OENABLE");
            this.OENABLE.configure(this, 32, 0, "RW", 0, 'h0, 1, 1, 0);
        endfunction : build
    endclass : gpio_ctrl_csr__OUTPUT_CTRL_ENABLE

    // Reg - gpio_ctrl_csr::INPUT_STATUS
    class gpio_ctrl_csr__INPUT_STATUS extends uvm_reg;
        rand uvm_reg_field IVALUE;

        function new(string name = "gpio_ctrl_csr__INPUT_STATUS");
            super.new(name, 32, UVM_NO_COVERAGE);
        endfunction : new

        virtual function void build();
            this.IVALUE = new("IVALUE");
            this.IVALUE.configure(this, 32, 0, "RO", 1, 'h0, 0, 1, 0);
        endfunction : build
    endclass : gpio_ctrl_csr__INPUT_STATUS

    // Addrmap - gpio_ctrl_csr
    class gpio_ctrl_csr extends uvm_reg_block;
        rand gpio_ctrl_csr__OUTPUT_CTRL_VALUE OUTPUT_CTRL_VALUE;
        rand gpio_ctrl_csr__OUTPUT_CTRL_ENABLE OUTPUT_CTRL_ENABLE;
        rand gpio_ctrl_csr__INPUT_STATUS INPUT_STATUS;

        function new(string name = "gpio_ctrl_csr");
            super.new(name);
        endfunction : new

        virtual function void build();
            this.default_map = create_map("reg_map", 0, 4, UVM_NO_ENDIAN);
            this.OUTPUT_CTRL_VALUE = new("OUTPUT_CTRL_VALUE");
            this.OUTPUT_CTRL_VALUE.configure(this);

            this.OUTPUT_CTRL_VALUE.build();
            this.default_map.add_reg(this.OUTPUT_CTRL_VALUE, 'h0);
            this.OUTPUT_CTRL_ENABLE = new("OUTPUT_CTRL_ENABLE");
            this.OUTPUT_CTRL_ENABLE.configure(this);

            this.OUTPUT_CTRL_ENABLE.build();
            this.default_map.add_reg(this.OUTPUT_CTRL_ENABLE, 'h4);
            this.INPUT_STATUS = new("INPUT_STATUS");
            this.INPUT_STATUS.configure(this);

            this.INPUT_STATUS.build();
            this.default_map.add_reg(this.INPUT_STATUS, 'h8);
        endfunction : build
    endclass : gpio_ctrl_csr

endpackage: gpio_ctrl_csr_ral_pkg
